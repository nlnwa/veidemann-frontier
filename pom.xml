<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.nlnwa</groupId>
    <artifactId>veidemann-frontier</artifactId>
    <version>0</version>
    <packaging>jar</packaging>

    <organization>
        <name>National Library of Norway</name>
        <url>http://nb.no</url>
    </organization>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <docker.tag>latest</docker.tag>

        <docker.java.image>openjdk:8-jdk-alpine</docker.java.image>

        <veidemann.commons.version>0.3.11</veidemann.commons.version>
        <veidemann.rethinkdbadapter.version>0.3.15</veidemann.rethinkdbadapter.version>

        <log4j.version>2.7</log4j.version>

        <!--Docker container versions for integration tests-->
        <rethinkdb.version>2.3.6</rethinkdb.version>
    </properties>

    <repositories>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
        <repository>
            <id>oss.sonatype.org</id>
            <name>OSS Sonatype</name>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>com.github.nlnwa</groupId>
            <artifactId>veidemann-rethinkdbadapter</artifactId>
            <version>${veidemann.rethinkdbadapter.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.nlnwa</groupId>
            <artifactId>veidemann-commons</artifactId>
            <version>${veidemann.commons.version}</version>
        </dependency>
        <dependency>
            <groupId>org.netpreserve.commons</groupId>
            <artifactId>webarchive-commons-uri</artifactId>
            <version>2.0.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.5</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>21.0</version>
        </dependency>

        <!-- Configuration framework -->
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>1.3.1</version>
        </dependency>

        <!-- Do all logging thru Log4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.21</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jul</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.8.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.27.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Make version number available for application -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>1.2.0</version>
                <configuration>
                    <to>
                        <image>docker.io/norsknettarkiv/${project.artifactId}</image>
                        <tags>
                            <tag>${docker.tag}</tag>
                        </tags>
                        <auth>
                            <username>${env.DOCKER_USERNAME}</username>
                            <password>${env.DOCKER_PASSWORD}</password>
                        </auth>
                    </to>
                    <container>
                        <ports>
                            <port>8080</port>
                            <port>5005</port>
                        </ports>
                        <volumes>
                            <volume>/workdir</volume>
                        </volumes>
                        <environment>
                            <WORK_DIR>/workdir</WORK_DIR>
                        </environment>
                    </container>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker-build</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>dockerBuild</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-build-and-push</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>integration-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <id>get-local-ip</id>
                                <goals>
                                    <goal>local-ip</goal>
                                </goals>
                                <configuration>
                                    <localIpProperty>local.ip</localIpProperty>
                                </configuration>
                            </execution>
                            <execution>
                                <id>reserve-network-port</id>
                                <goals>
                                    <goal>reserve-network-port</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <portNames>
                                        <portName>dnsresolver.port</portName>
                                        <portName>robotsevaluator.port</portName>
                                        <portName>ooshandler.port</portName>
                                    </portNames>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-tests</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                                    <images>
                                        <image>
                                            <name>rethinkdb:${rethinkdb.version}</name>
                                            <alias>db</alias>
                                            <run>
                                                <network>
                                                    <mode>custom</mode>
                                                    <name>frontier-test-net</name>
                                                    <alias>db</alias>
                                                </network>
                                                <ports>
                                                    <port>+db.host:db.port:28015</port>
                                                </ports>
                                                <log>
                                                    <enabled>true</enabled>
                                                </log>
                                                <wait>
                                                    <tcp>
                                                        <mode>mapped</mode>
                                                        <ports>
                                                            <port>28015</port>
                                                        </ports>
                                                    </tcp>
                                                    <time>20000</time>
                                                </wait>
                                            </run>
                                        </image>
                                        <image>
                                            <name>norsknettarkiv/veidemann-db-initializer:${veidemann.rethinkdbadapter.version}</name>
                                            <alias>db-initializer</alias>
                                            <run>
                                                <network>
                                                    <mode>custom</mode>
                                                    <name>frontier-test-net</name>
                                                    <alias>db-initializer</alias>
                                                </network>
                                                <dependsOn>
                                                    <container>db</container>
                                                </dependsOn>
                                                <env>
                                                    <DB_HOST>db</DB_HOST>
                                                    <DB_USER>admin</DB_USER>
                                                    <DB_PASSWORD></DB_PASSWORD>
                                                </env>
                                                <log>
                                                    <enabled>true</enabled>
                                                </log>
                                                <wait>
                                                    <log>DB initialized</log>
                                                    <time>60000</time>
                                                </wait>
                                            </run>
                                        </image>
                                        <image>
                                            <name>norsknettarkiv/veidemann-frontier</name>
                                            <alias>frontier</alias>
                                            <run>
                                                <network>
                                                    <mode>custom</mode>
                                                    <name>frontier-test-net</name>
                                                    <alias>frontier</alias>
                                                </network>
                                                <ports>
                                                    <port>+frontier.host:frontier.port:7700</port>
                                                </ports>
                                                <dependsOn>
                                                    <container>db-initializer</container>
                                                </dependsOn>
                                                <env>
                                                    <DB_HOST>db</DB_HOST>
                                                    <ROBOTS_EVALUATOR_HOST>${local.ip}</ROBOTS_EVALUATOR_HOST>
                                                    <ROBOTS_EVALUATOR_PORT>${robotsevaluator.port}</ROBOTS_EVALUATOR_PORT>
                                                    <DNS_RESOLVER_HOST>${local.ip}</DNS_RESOLVER_HOST>
                                                    <DNS_RESOLVER_PORT>${dnsresolver.port}</DNS_RESOLVER_PORT>
                                                    <OOS_HANDLER_HOST>${local.ip}</OOS_HANDLER_HOST>
                                                    <OOS_HANDLER_PORT>${ooshandler.port}</OOS_HANDLER_PORT>
                                                </env>
                                                <log>
                                                    <enabled>true</enabled>
                                                </log>
                                                <wait>
                                                    <log>Veidemann Frontier .* started</log>
                                                    <time>30000</time>
                                                </wait>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                            <execution>
                                <id>remove-tests</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <removeVolumes>true</removeVolumes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <systemPropertyVariables>
                                <db.host>${db.host}</db.host>
                                <db.port>${db.port}</db.port>
                                <frontier.host>${frontier.host}</frontier.host>
                                <frontier.port>${frontier.port}</frontier.port>
                                <local.ip>${local.ip}</local.ip>
                                <dnsresolver.port>${dnsresolver.port}</dnsresolver.port>
                                <robotsevaluator.port>${robotsevaluator.port}</robotsevaluator.port>
                                <ooshandler.port>${ooshandler.port}</ooshandler.port>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
